#!/usr/bin/env bash
#
# setup_nvim_v7.sh
#
# Description: Installs vim-plug (if necessary), generates a Neovim
# configuration at ~/.config/nvim/init.vim using a robust plugin suite,
# Gruvbox theme options, and various productivity enhancements.
#
# Usage: ./setup_nvim_v7.sh [-b | --backup] [-t THEME]
#
# Options:
#   -b, --backup      Backup existing init.vim and vim-plug before reinstalling
#   -t, --theme THEME Specify colorscheme (default: gruvbox)
#   -h, --help        Display this help and exit

set -euo pipefail

# -------------------------
# Default Configuration
# -------------------------
NVIM_CONF_DIR="$HOME/.config/nvim"
NVIM_CONF_FILE="$NVIM_CONF_DIR/init.vim"
PLUG_VIM="$HOME/.local/share/nvim/site/autoload/plug.vim"
PLUG_VIM_URL="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
BACKUP=false
THEME="gruvbox"

# -------------------------
# Help / Usage Function
# -------------------------
usage() {
  cat << EOF
Usage: $0 [options]

Options:
  -b, --backup      Backup existing config and vim-plug before reinstalling
  -t, --theme THEME Choose colorscheme (default: gruvbox)
  -h, --help        Display this help and exit
EOF
  exit 0
}

# -------------------------
# Parse Command-Line Arguments
# -------------------------
while [[ "$#" -gt 0 ]]; do
  case "$1" in
    -b|--backup) BACKUP=true; shift;;
    -t|--theme) THEME="$2"; shift 2;;
    -h|--help) usage;;
    *) echo "Unknown option: $1"; usage;;
  esac
done

# -------------------------
# Function: install_vim_plug
# -------------------------
install_vim_plug() {
  if [ -f "$PLUG_VIM" ]; then
    echo "→ vim-plug already detected at $PLUG_VIM"
    if [ "$BACKUP" = true ]; then
      echo "  Backing up existing plug.vim to plug.vim.bak"
      mv "$PLUG_VIM" "${PLUG_VIM}.bak"
    fi
    echo "  Reinstalling vim-plug..."
    curl -fLo "$PLUG_VIM" --create-dirs "$PLUG_VIM_URL"
  else
    echo "→ Installing vim-plug..."
    curl -fLo "$PLUG_VIM" --create-dirs "$PLUG_VIM_URL"
  fi
}

# -----------------------------
# Function: create_nvim_config
# -----------------------------
create_nvim_config() {
  echo "→ Generating Neovim configuration at $NVIM_CONF_FILE"
  mkdir -p "$NVIM_CONF_DIR"
  cat <<- INITCONF > "$NVIM_CONF_FILE"
"==============================================================================
" init.vim — generated by setup_nvim_v7.sh
"==============================================================================

" ------------------------
" Plugin Manager Setup
" ------------------------
call plug#begin('~/.vim/plugged')

  " Core Utilities
  Plug 'nvim-lua/plenary.nvim'
  Plug 'nvim-lua/popup.nvim'

  " Fuzzy Finder & Telescope
  Plug 'nvim-telescope/telescope.nvim', { 'tag': '0.1.2' }

  " Themes: Gruvbox
  Plug 'morhetz/gruvbox'
  Plug 'ellisonleao/gruvbox.nvim'

  " Status & Buffer Line
  Plug 'nvim-lualine/lualine.nvim'
  Plug 'akinsho/bufferline.nvim', { 'tag': 'v3.*' }

  " File Explorer & Projects
  Plug 'nvim-tree/nvim-tree.lua'
  Plug 'ahmedkhalf/project.nvim'

  " Treesitter & Playground
  Plug 'nvim-treesitter/nvim-treesitter', { 'do': ':TSUpdate' }
  Plug 'nvim-treesitter/playground'

  " LSP & Autocompletion
  Plug 'neovim/nvim-lspconfig'
  Plug 'williamboman/mason.nvim'
  Plug 'williamboman/mason-lspconfig.nvim'
  Plug 'hrsh7th/nvim-cmp'
  Plug 'hrsh7th/cmp-nvim-lsp'
  Plug 'hrsh7th/cmp-buffer'
  Plug 'hrsh7th/cmp-path'
  Plug 'hrsh7th/cmp-cmdline'
  Plug 'L3MON4D3/LuaSnip'
  Plug 'rafamadriz/friendly-snippets'

  " Git Integration & Diffs
  Plug 'lewis6991/gitsigns.nvim'
  Plug 'sindrets/diffview.nvim'

  " UI & Productivity
  Plug 'lukas-reineke/indent-blankline.nvim'
  Plug 'rcarriga/nvim-notify'
  Plug 'glepnir/dashboard-nvim'
  Plug 'tpope/vim-surround'
  Plug 'numToStr/Comment.nvim'
  Plug 'windwp/nvim-autopairs'
  Plug 'folke/which-key.nvim'
  Plug 'folke/zen-mode.nvim'
  Plug 'folke/twilight.nvim'

call plug#end()

" ------------------------
" Gruvbox Theme Settings
" ------------------------
let g:gruvbox_contrast_dark    = 'hard'
let g:gruvbox_material_enable_italic = 1
let g:gruvbox_material_palette = 'mix'
set termguicolors
set background=dark
colorscheme $THEME

" ------------------------
" Editor Options
" ------------------------
set number
set relativenumber
set numberwidth=5           " Fix column width to prevent number shifting
set cursorline
set clipboard=unnamedplus
set mouse=a
set hidden
set signcolumn=yes

" ------------------------
" Key Mappings
" ------------------------
nnoremap <C-s> :w<CR>
nnoremap <C-p> :Telescope find_files<CR>
nnoremap <leader>ff :Telescope live_grep<CR>
nnoremap <leader>fb :Telescope buffers<CR>
nnoremap <leader>fg :Telescope git_files<CR>

" ------------------------
" Lua-based Config
" Place in ~/.config/nvim/after/plugin/*.lua
" ------------------------
lua << 'LUA_EOF'
-- Performance
require('impatient')

-- Treesitter
require('nvim-treesitter.configs').setup {
  ensure_installed = 'maintained',
  highlight = { enable = true },
  playground = { enable = true },
}

-- Mason & LSP
require('mason').setup()
require('mason-lspconfig').setup({ ensure_installed = { 'pyright', 'tsserver', 'gopls' } })

local lspconfig = require('lspconfig')
lspconfig.pyright.setup {}
lspconfig.tsserver.setup {}

-- Completion
local cmp = require('cmp')
cmp.setup {
  snippet = { expand = function(args) require('luasnip').lsp_expand(args.body) end },
  mapping = cmp.mapping.preset.insert({ ['<C-Space>'] = cmp.mapping.complete() }),
  sources = cmp.config.sources({ { name = 'nvim_lsp' }, { name = 'buffer' } }),
}

-- Telescope & Dashboard
require('telescope').setup{}
require('telescope').load_extension('project')
require('dashboard').setup{}

-- Notifications, WhichKey, Zen & Twilight
require('notify').setup { stages = 'fade', timeout = 3000 }
require('which-key').setup {}
require('nvim-autopairs').setup {}
require('Comment').setup {}
require('zen-mode').setup {}
require('twilight').setup {}
LUA_EOF

INITCONF
}

# -----------------------------
# Main Execution
# -----------------------------
install_vim_plug
create_nvim_config

echo "→ Installing plugins via Neovim (this may take a few minutes)..."
nvim +PlugInstall +qall

echo "✅ Neovim setup complete!"

