#!/usr/bin/env bash
#
# setup_nvim_v7.sh
#
# Description: Installs vim-plug (if necessary), generates a Neovim
# configuration at ~/.config/nvim/init.vim using a robust plugin suite,
# Gruvbox theme options, and various productivity enhancements.
#
# Usage: ./setup_nvim_v7.sh [-b | --backup] [-t THEME]
#
# Options:
#   -b, --backup      Backup existing init.vim and vim-plug before reinstalling
#   -t, --theme THEME Specify colorscheme (default: gruvbox)
#   -h, --help        Display this help and exit

set -euo pipefail

# -------------------------
# Default Configuration
# -------------------------
NVIM_CONF_DIR="$HOME/.config/nvim"
NVIM_CONF_FILE="$NVIM_CONF_DIR/init.vim"
PLUG_VIM="$HOME/.local/share/nvim/site/autoload/plug.vim"
PLUG_VIM_URL="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
BACKUP=false
THEME="gruvbox"

# -------------------------
# Help / Usage Function
# -------------------------
usage() {
  cat << EOF
Usage: $0 [options]

Options:
  -b, --backup      Backup existing config and vim-plug before reinstalling
  -t, --theme THEME Choose colorscheme (default: gruvbox)
  -h, --help        Display this help and exit
EOF
  exit 0
}

# -------------------------
# Parse Command-Line Arguments
# -------------------------
while [[ "$#" -gt 0 ]]; do
  case "$1" in
    -b|--backup) BACKUP=true; shift;;
    -t|--theme) THEME="$2"; shift 2;;
    -h|--help) usage;;
    *) echo "Unknown option: $1"; usage;;
  esac
done

# -------------------------
# Function: install_vim_plug
# -------------------------
install_vim_plug() {
  if [ -f "$PLUG_VIM" ]; then
    echo "→ vim-plug already detected at $PLUG_VIM"
    if [ "$BACKUP" = true ]; then
      echo "  Backing up existing plug.vim to plug.vim.bak"
      mv "$PLUG_VIM" "${PLUG_VIM}.bak"
    fi
    echo "  Reinstalling vim-plug..."
    curl -fLo "$PLUG_VIM" --create-dirs "$PLUG_VIM_URL"
  else
    echo "→ Installing vim-plug..."
    curl -fLo "$PLUG_VIM" --create-dirs "$PLUG_VIM_URL"
  fi
}

# -----------------------------
# Function: create_nvim_config
# -----------------------------
create_nvim_config() {
  echo "→ Generating Neovim configuration at $NVIM_CONF_FILE"
  mkdir -p "$NVIM_CONF_DIR"
  cat <<- INITCONF > "$NVIM_CONF_FILE"
"==============================================================================
" init.vim — generated by setup_nvim_v7.sh
"==============================================================================

" ------------------------
" Plugin Manager Setup
" ------------------------
call plug#begin('~/.vim/plugged')

  " Theme: Tokyo Night
  Plug 'folke/tokyonight.nvim'

  " File Explorer Sidebar
  Plug 'nvim-tree/nvim-tree.lua'
  Plug 'nvim-tree/nvim-web-devicons'

  " Telescope for fuzzy navigation
  Plug 'nvim-telescope/telescope.nvim', {'tag':'0.1.2'}

  " Lualine with theme integration
  Plug 'nvim-lualine/lualine.nvim'

call plug#end()

" ------------------------
" Basic Editor Settings
" ------------------------
set number             " Show line numbers
set relativenumber     " Relative line numbers
set numberwidth=4      " Fixed gutter width
set signcolumn=yes     " Always show sign column
set cursorline         " Highlight current line
set termguicolors      " True color support
set background=dark    " Dark background

" ------------------------
" Theme Configuration
" ------------------------
lua << EOF
require('tokyonight').setup {
  style = 'moon',       -- one of 'storm', 'moon', 'night', 'day'
  transparent = false,
  terminal_colors = true,
  styles = {
    sidebars = 'dark',  -- style for sidebar and floats
  },
  sidebars = { 'qf', 'help', 'NvimTree' },
}
vim.cmd('colorscheme tokyonight')
EOF

" ------------------------
" Nvim-Tree Configuration
" ------------------------
lua << EOF
require('nvim-tree').setup {
  view = {
    width = 30,
    side = 'left',
    hide_root_folder = false,
    mappings = { custom_only = false },
  },
  renderer = {
    icons = { show = { git = true, folder = true, file = true } }
  },
  filters = { dotfiles = false },
}

" Auto-open NvimTree on start
vim.api.nvim_exec([[
  autocmd VimEnter * NvimTreeToggle
]], false)
EOF

INITCONF
}

# -----------------------------
# Main Execution
# -----------------------------
install_vim_plug
create_nvim_config

echo "→ Installing plugins via Neovim (this may take a few minutes...)"
nvim +PlugInstall +qall

echo "✅ Neovim setup complete!"

